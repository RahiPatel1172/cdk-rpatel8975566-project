name: Deploy CDK Infrastructure

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy AWS Resources
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Validate template before deployment
    - name: Validate CloudFormation Template
      id: validate
      run: |
        echo "Validating CloudFormation template..."
        aws cloudformation validate-template \
          --template-body file://template.yaml
        echo "validation_status=success" >> "$GITHUB_ENV"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    # Check if stack exists
    - name: Check Existing Stack
      id: check-stack
      continue-on-error: true
      run: |
        echo "Checking if stack exists..."
        if aws cloudformation describe-stacks --stack-name ${{ secrets.STACK_NAME }}; then
          echo "stack_exists=true" >> "$GITHUB_ENV"
        else
          echo "stack_exists=false" >> "$GITHUB_ENV"
        fi

    - name: Deploy CloudFormation Stack
      id: deploy
      run: |
        echo "Deploying stack..."
        aws cloudformation deploy \
          --template-file template.yaml \
          --stack-name ${{ secrets.STACK_NAME }} \
          --capabilities CAPABILITY_NAMED_IAM \
          --no-fail-on-empty-changeset \
          --tags Project=${{ secrets.PROJECT_TAG }} Owner=${{ secrets.OWNER_TAG }}
        echo "deploy_status=success" >> "$GITHUB_ENV"

    - name: Verify Stack Resources
      if: env.deploy_status == 'success'
      run: |
        echo "Verifying stack resources..."
        aws cloudformation list-stack-resources \
          --stack-name ${{ secrets.STACK_NAME }} 